name: Python Application CI/CD

on:
  push:
    branches: [ "main" ]
    paths:
      - 'main.py'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        activate-environment: true
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"
    - name: Install the project
      run: uv sync
    - name: Build with Nuitka
      uses: Nuitka/Nuitka-Action@main
      with:
        nuitka-version: main
        script-name: main.py
        mode: onefile
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: hotline-${{ matrix.os }}
        path: main*

  release:
    needs: build
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/hotline-ubuntu-latest/main
          asset_name: hotline
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/hotline-windows-latest/main.exe
          asset_name: hotline.exe
          asset_content_type: application/vnd.microsoft.portable-executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}